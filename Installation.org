#+title: Installation

* Table of Contents :TOC_3:noexport:
- [[#arch-linux-installation][Arch Linux installation]]
  - [[#arch-installation][Arch Installation:]]
  - [[#graphical-desktopwindows-manager-installation][Graphical Desktop/Windows manager Installation:]]

* Arch Linux installation
** Arch Installation:
Simply follow this steps/cmds to install arch linux with LTS kernel.

- Obtain latest iso image for Arch linux from [[http://mirror.csclub.uwaterloo.ca/archlinux/iso/latest/archlinux-x86_64.iso][Here (latest version)]] and boot to it.
- Verify EFI boot mode: ~ls /sys/firmware/efi/efivars~. All of my system should be EFI.
- Connect to Internet via Ethernet or ~iwctl~. In below example we are using wifi over wlan0 but we can have different network type
  #+BEGIN_SRC bash
  iwctl
  device list
  station wlan0 scan
  station wlan0 get-networks
  station wlan0 connect "Name of Netork/WiFi"
  #+END_SRC
- Update the clock: ~timedatectl set-ntp true~
- Disk partition:
  | Mount Point | Partition | Partition Type | Size                     |
  |-------------+-----------+----------------+--------------------------|
  | /mnt/boot/  | /dev/sda1 | fat32          | 512MiB (1MiB to 512MiB)  |
  | swap        | /dev/sda2 | linux-swap     | 1.5GiB (512MiB to 2GiB)  |
  | /mnt        | /dev/sda3 | ext4           | remaining (2GiB to 100%) |

  Use ~parted~ to create the partitions
  #+BEGIN_SRC shell
  parted /dev/sda -- mklabel gpt
  parted /dev/sda -- mkpart ESP fat32 1MiB 512MiB
  parted /dev/sda -- set 1 esp on
  parted /dev/sda -- mkpart primary linux-swap 512MiB 2GiB
  parted /dev/sda -- mkpart primary 2GiB 100%
  #+END_SRC

  Formatting the disks:
  #+BEGIN_SRC bash
  mkfs.fat -F 32 -n BOOT /dev/sda1
  mkswap -L SWAP /dev/sda2
  mkfs.ext4 -L ARCH /dev/sda3
  #+END_SRC
- Mounting partitions:
  #+BEGIN_SRC bash
  mount /dev/sda3 /mnt
  swapon /dev/sda2
  #+END_SRC
- Install archlinux:
  #+BEGIN_SRC bash
  pacstrap /mnt base base-devel linux-lts linux-firmware neovim sudo
  #+END_SRC
- Fstab setup:
  #+BEGIN_SRC bash
  genfstab -U /mnt >> /mnt/etc/fstab
  #+END_SRC
- Change root: ~~
  #+BEGIN_SRC bash
  arch-chroot /mnt
  #+END_SRC
- Zoneinfo update:
  #+BEGIN_SRC bash
  ln -sf /usr/share/zoneinfo/America/Toronto /etc/localtime
  #+END_SRC
- Localization: ~nvim /etc/locale.gen~ and un-comment ~en_US.UTF-8 UTF-8~ once that done generate locale by ~locale-gen~
- Update language:
  #+BEGIN_SRC bash
  echo "LANG=en_US.UTF-8" > /etc/locale.conf
  export LANG=en_US.UTF-8
  #+END_SRC
- Update hostname:
  #+BEGIN_SRC bash
  echo "<hostname>" > /etc/hostname
  #+END_SRC
- Update hosts file with ~nvim /etc/hosts~:
  #+BEGIN_SRC text
  127.0.0.1     localhost
  ::1           localhost
  127.0.1.1     ds-laptop
  #+END_SRC
- Setup root password: ~passwd~
- Adding a user:
  #+BEGIN_SRC bash
  useradd -m ds
  passwd ds
  usermod -aG wheel,audio,video,storage,power ds
  EDITOR=nvim visuod
  # uncomment this line: %wheel ALL=(ALL:ALL) ALL
  #+END_SRC
- Install Grub
  #+BEGIN_SRC bash
  pacman -S grub efibootmgr os-prober mtools
  mount --mkdir /dev/sda1 /boot/efi
  grub-install --target=x86_64-efi --bootloader-id=GRUB --efi-directory=/boot/efi
  grub-mkconfig -o /boot/grub/grub.cfg
  #+END_SRC
- Install microcode and few extra essential software:
  #+BEGIN_SRC bash
  pacman -S intel-ucode curl wget git xdg-user-dirs networkmanager
  #+END_SRC
- Enable Some services
  #+BEGIN_SRC bash
  systemctl enable NetworkManager
  #+END_SRC
- Exit and shutdown
  #+BEGIN_SRC bash
  exit
  umount -R /mnt
  swapoff /dev/sda2
  shutdown now
  #+END_SRC

** Graphical Desktop/Windows manager Installation:
All packages installation are taken care by ~chezmoi~ so look at the [[file:home/.chezmoiscripts/linux/run_onchange_before_11_install-arch-packages.sh.tmpl][Arch Installation]] script.
