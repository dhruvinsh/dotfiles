--- dotbot/dotbot/plugins/link.py	2019-09-15 21:15:21.479876684 -0400
+++ link.py	2019-09-15 21:14:56.129876883 -0400
@@ -3,6 +3,15 @@
 import shutil
 import dotbot
 import subprocess
+from jinja2 import Environment, FileSystemLoader
+
+
+BLOCK_START = '{%@@'
+BLOCK_END = '@@%}'
+VAR_START = '{{@@'
+VAR_END = '@@}}'
+COMMENT_START = '{#@@'
+COMMENT_END = '@@#}'
 
 
 class Link(dotbot.Plugin):
@@ -12,6 +21,19 @@
 
     _directive = 'link'
 
+    def __init__(self, context, base='.'):
+        super(Link, self).__init__(context=context)
+        loader = FileSystemLoader(base.rstrip(os.sep))
+        self.env = Environment(loader=loader,
+                               trim_blocks=True, lstrip_blocks=True,
+                               keep_trailing_newline=True,
+                               block_start_string=BLOCK_START,
+                               block_end_string=BLOCK_END,
+                               variable_start_string=VAR_START,
+                               variable_end_string=VAR_END,
+                               comment_start_string=COMMENT_START,
+                               comment_end_string=COMMENT_END)
+
     def can_handle(self, directive):
         return directive == self._directive
 
@@ -24,6 +46,7 @@
         success = True
         defaults = self._context.defaults().get('link', {})
         for destination, source in links.items():
+            profile = False
             destination = os.path.expandvars(destination)
             relative = defaults.get('relative', False)
             force = defaults.get('force', False)
@@ -39,6 +62,7 @@
                 relink = source.get('relink', relink)
                 create = source.get('create', create)
                 use_glob = source.get('glob', use_glob)
+                profile = source.get('profile', False)
                 path = self._default_source(destination, source.get('path'))
             else:
                 path = self._default_source(destination, source)
@@ -46,6 +70,10 @@
                 self._log.lowinfo('Skipping %s' % destination)
                 continue
             path = os.path.expandvars(os.path.expanduser(path))
+
+            if profile:
+                path = self._render(path, profile=profile)
+
             if use_glob:
                 self._log.debug("Globbing with path: " + str(path))
                 glob_results = glob.glob(path)
@@ -236,3 +264,18 @@
             self._log.lowinfo('Link exists %s -> %s' % (link_name, source))
             success = True
         return success
+
+    def _render(self, source, **kwargs):
+        absolute_source = os.path.join(self._context.base_directory(), source)
+        parent_dir = os.path.abspath(os.path.join(absolute_source, os.pardir))
+        template_dir = os.path.join(parent_dir, '_jinja_render')
+        rendered_file = os.path.join(template_dir, os.path.basename(absolute_source))
+
+        if not os.path.isdir(template_dir):
+            os.mkdir(template_dir)
+
+        template = self.env.get_template(source, parent=parent_dir)
+        with open(rendered_file, 'w') as fp:
+            fp.write(template.render(**kwargs))
+
+        return rendered_file
