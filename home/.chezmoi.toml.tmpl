# chezmoi.toml -*- mode: toml -*-
# vim: set ft=toml:

# Question mark at the end not required. Chezmoi adds its own.
{{- $personalmachine := promptBool "Is it personal machine" -}}

{{/* wsl detection */}}
{{- $wsl   := false -}}{{/* wsl 1/2 */}}
{{- $wsl1  := false -}}{{/* wsl 1 */}}
{{- $wsl2  := false -}}{{/* wsl 2 */}}
{{- if (env "WSL_DISTRO_NAME") -}}
{{-   $wsl = true -}}
{{- end -}}
{{- if and $wsl (env "WSL_INTEROP" | not) -}}
{{-   $wsl1 = true -}}
{{- end -}}
{{- if and $wsl (env "WSL_INTEROP") -}}
{{-   $wsl2 = true -}}
{{- end }}

{{- $archlinux    := false -}}
{{- $ubuntu       := false -}}
{{- $desktopEnv   := false }}

{{- if eq .chezmoi.os "linux" -}}
{{/*  arch or ubuntu */}}
{{-   if eq .chezmoi.osRelease.name "Arch Linux" }}
{{-     $archlinux = true -}}
{{-     $ubuntu = false -}}
{{-   else }}
{{-     $archlinux = false -}}
{{-     $ubuntu = true -}} 
{{-   end -}}
{{/*  is it desktop version linux? */}}
{{-   if (env "XDG_CURRENT_DESKTOP") -}}
{{-     $desktopEnv = true -}}
{{-   end }}
{{- end -}}


{{/* is it a ssh session? */}}
{{- $sshSession := false }}
{{- if (env "SSH_CONNECTION") -}}
{{-   $sshSession = true -}}
{{- end }}

{{/* chassisType variable set to "desktop" or "laptop" or "vm" */}}
{{- $chassisType := "unknown" }}
{{- if eq .chezmoi.os "darwin" }}
{{-   if contains "MacBook" (output "sysctl" "-n" "hw.model") }}
{{-     $chassisType = "laptop" }}
{{-   else }}
{{-     $chassisType = "desktop" }}
{{-   end }}
{{- else if and (not $wsl) (eq .chezmoi.os "linux") }}
{{-   $chassisType = (output "hostnamectl" "--json=short" | mustFromJson).Chassis }}
{{- else if eq .chezmoi.os "windows" }}
{{-   $chassisType = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "if ((Get-CimInstance -Class Win32_Battery | Measure-Object).Count -gt 0) { Write-Output 'laptop' } else { Write-Output 'desktop' }") | trim }}
{{- end }}


[data]
  personalmachine = {{ $personalmachine }}
  wsl = {{ $wsl }}
  wsl1 = {{ $wsl1 }}
  wsl2 = {{ $wsl2 }}
  archlinux = {{ $archlinux }}
  ubuntu = {{ $ubuntu }}
  encryption = "age"
  isDesktop = {{ $desktopEnv }}
  chassisType = {{ $chassisType | quote }}
  sshSession = {{ $sshSession }}

[age]
  identity = "~/.key.txt"
  recipient = "age17yfjyk63433uzr5q2lqxx4sexfnz6e9t648kku5t9sehfye7x4eqy9mhmu"

[interpreters.ps1]
  command = "pwsh"
  args = ["-NoLogo"]
