# chezmoi.toml -*- mode: toml -*-

# Question mark at the end not required. Chezmoi adds its own.
{{- $emacs           := promptBool "Want to install emacs" -}}
{{- $personalmachine := promptBool "Is it personal machine" -}}

{{/* wsl detection */}}
{{- $wsl            := false -}}{{/* wsl 1/2 */}}
{{- $wsl1           := false -}}{{/* wsl 1 */}}
{{- $wsl2           := false -}}{{/* wsl 2 */}}
{{- if (env "WSL_DISTRO_NAME") -}}
{{- $wsl = true -}}
{{- end -}}
{{- if and $wsl (env "WSL_INTEROP" | not) -}}
{{- $wsl1 = true -}}
{{- end -}}
{{- if and $wsl (env "WSL_INTEROP") -}}
{{- $wsl2 = true -}}
{{- end }}

{{/* arch or ubuntu */}}
{{- $archlinux      := false -}}
{{- $ubuntu         := true -}}
{{- if eq .chezmoi.osRelease.name "Arch Linux" }}
{{- $archlinux = true -}}
{{- $ubuntu = false -}}
{{- end -}}

{{/* is it desktop version linux? */}}
{{- $desktopEnv := false }}
{{- if (env "XDG_CURRENT_DESKTOP") -}}
{{-   $desktopEnv = true -}}
{{- end }}

{{/* chassisType variable set to "desktop" or "laptop" or "vm" */}}
{{- $chassisType := (output "hostnamectl" "--json=short" | mustFromJson).Chassis }}

{{/* CPU core detection */}}
{{- $cpuCores := 1 }}
{{- $cpuThreads := 1 }}
{{- if eq .chezmoi.os "darwin" }}
{{-   $cpuCores = (output "sysctl" "-n" "hw.physicalcpu_max") | trim | atoi }}
{{-   $cpuThreads = (output "sysctl" "-n" "hw.logicalcpu_max") | trim | atoi }}
{{- else if eq .chezmoi.os "linux" }}
{{-   $cpuCores = (output "sh" "-c" "lscpu --online --parse | grep --invert-match '^#' | sort --field-separator=',' --key='2,4' --unique | wc --lines") | trim | atoi }}
{{-   $cpuThreads = (output "sh" "-c" "lscpu --online --parse | grep --invert-match '^#' | wc --lines") | trim | atoi }}
{{- else if eq .chezmoi.os "windows" }}
{{-   $cpuCores = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "(Get-CimInstance -ClassName 'Win32_Processor').NumberOfCores") | trim | atoi }}
{{-   $cpuThreads = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "(Get-CimInstance -ClassName 'Win32_Processor').NumberOfLogicalProcessors") | trim | atoi }}
{{- end }}


[data]
  personalmachine = {{ $personalmachine }}
  wsl = {{ $wsl }}
  wsl1 = {{ $wsl1 }}
  wsl2 = {{ $wsl2 }}
  archlinux = {{ $archlinux }}
  ubuntu = {{ $ubuntu }}
  encryption = "age"
  isDesktop = {{ $desktopEnv }}
  chassisType = {{ $chassisType }}

[data.cpu]
  cores = {{ $cpuCores }}
  threads = {{ $cpuThreads }}

[data.emacs]
  setup = {{ $emacs }}
  {{- if ge $cpuCores 4 }}
  build = true
  ppa = false
  {{- else }}
  build = false
  ppa = true
  {{- end }}

[age]
  identity = "~/.key.txt"
  recipient = "age17yfjyk63433uzr5q2lqxx4sexfnz6e9t648kku5t9sehfye7x4eqy9mhmu"
