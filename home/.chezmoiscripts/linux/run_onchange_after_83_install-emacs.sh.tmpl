#!/usr/bin/env bash
set -eo pipefail

{{- if eq .emacs true }}
# some variables
LOCAL=~/.local
TEMP_DIR=/tmp/emacs

# in Arch system no cleaning or bulding emacs required
{{- if eq .ubuntu true }}
# clean ups befor we build new emacs
rm -rf $LOCAL/bin/ctags
rm -rf $LOCAL/bin/ebrowse
rm -rf $LOCAL/bin/emacs
rm -rf $LOCAL/bin/emacs*
rm -rf $LOCAL/bin/etags

rm -rf $LOCAL/include/emac*
rm -rf $LOCAL/lib/emacs*
rm -rf $LOCAL/lib/systemd/user/ema*
rm -rf $LOCAL/libexec/emacs*
rm -rf $LOCAL/share/applications/emacs*
rm -rf $LOCAL/share/emacs*
rm -rf $LOCAL/share/info
rm -rf $LOCAL/share/metainfo/emacs*
rm -rf /tmp/emacs*


# Emacs setup
export CC=/usr/bin/gcc-10 CXX=/usr/bin/gcc-10

if [[ -z $EMACS_PGTK ]]; then
  echo "Downloading Emacs from GNU FTP and extracting the files.."
  sleep 2
  URL=http://mirror.csclub.uwaterloo.ca/gnu/emacs/emacs-{{ .emacsVersion }}.tar.gz
  wget $URL -O /tmp/emacs.tar.gz -q
  tar -xzf /tmp/emacs.tar.gz --directory /tmp
  cd /tmp/emacs-{{ .emacsVersion }}
  ./configure --with-modules --with-json --with-native-compilation --with-mailutils --prefix=$HOME/.local
else
  echo "Git clone master emacs-mirror from github"
  sleep 2
  URL=https://github.com/emacs-mirror/emacs.git
  BRANCH=master

  git clone --depth=1 --branch=$BRANCH $URL $TEMP_DIR
  cd $TEMP_DIR

  ./autogen.sh
  ./configure --with-modules --with-pgtk --with-json --with-native-compilation --with-mailutils --prefix=$HOME/.local
fi

make -j $(nproc) install
{{- end }}

# Once emacs is installed lets setup doom emacs if required
echo "setup doom-emacs"
PATH="$PATH:$HOME/.local/bin"
$HOME/.config/emacs/bin/doom install

{{- end }}
