#!/usr/bin/env bash
# vim: set expandtab ts=4 sw=4 ft=sh:

# some time I make change in environemnt and residula files needs to be clean
# manually. This script takes care of that part

if [ -x "$(command -v add-apt-repository)" ]; then
    # golang ppa removal
    sudo add-apt-repository --remove -y ppa:longsleep/golang-backports
fi

[ -f "$HOME/key.txt" ] && rm -rf "$HOME/key.txt"

[ -f "$HOME/.local/bin/bw" ] && rm -rf "$HOME/.local/bin/bw"

{{- if eq .emacs.setup true }}
# Decided to move doom emacs to .config directory but it gives lots of trouble for emacs
# hence moving back to the $HOME/.emacs.d and $HOME/.doom.d Below cleanup is for doom
# emacs installs in $HOME/.config/
[[ -d "$HOME/.config/emacs" ]] && rm -rf "$HOME"/.config/emacs
[[ -d "$HOME/.config/doom" ]] && rm -rf "$HOME"/.config/doom
{{- end }}

# tldr now moved to tealdeer version (rust) cleaning up node version
if
    command -v npm &
    > /dev/null
then
    # even if tldr is uninstalled running it again will not harm
    npm uninstall -g tldr
fi

# neovim unstable cleanup
sudo add-apt-repository --remove -y ppa:neovim-ppa/unstable
if [ -x "$(command -v nvim)" ]; then
    if nvim --version | grep -q "dev"; then
        echo "Cleaning up neovim unstable"
        sudo apt purge neovim neovim-runtime
    fi
fi

# Change in python workflow hence global poetry installation not required
echo "Cleaning up Old Poetry..."
curl -sSL https://install.python-poetry.org | python3 - --uninstall

echo "Cleaning up autojump"
if [ -x "$(command -v autojump)" ]; then
    # at this point we can assume that in past dotfiles were installed
    # and with that git and python is available.
    AUTOJUMP=https://github.com/wting/autojump.git
    AUTOJUMP_DIR=/tmp/autojump
    git clone $AUTOJUMP $AUTOJUMP_DIR
    cd $AUTOJUMP_DIR
    ./uninstall.py
    rm -rf .local/share/autojump/
fi

echo "removing nvm.."
rm -rf ~/.nvm

echo "Clean up finished"
