#!/usr/bin/env bash
# vim: set expandtab ts=4 sw=4 ft=sh:
set -euo pipefail

# if ubuntu desktop based system
{{- if (and (.isDesktop) (.ubuntu) (.personalmachine)) }}

packages+=(
    imagemagick
)

# install all the packages
sudo apt install -y ${packages[@]}

echo "setup kitty terminal"
if [ ! -x $(command -v kitty) ]; then
    curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin launch=n
    ln -s ~/.local/kitty.app/bin/kitty ~/.local/bin/
    cp ~/.local/kitty.app/share/applications/kitty.desktop ~/.local/share/applications/
    cp ~/.local/kitty.app/share/applications/kitty-open.desktop ~/.local/share/applications/
    sed -i "s|Icon=kitty|Icon=/home/$USER/.local/kitty.app/share/icons/hicolor/256x256/apps/kitty.png|g" ~/.local/share/applications/kitty*.desktop
    sed -i "s|Exec=kitty|Exec=/home/$USER/.local/kitty.app/bin/kitty|g" ~/.local/share/applications/kitty*.desktop
fi

# chrome re-installation is harmless in fact we end up updating it!
echo "setup google chrome"
CHROME=https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
wget $CHROME -O /tmp/chrome.deb
sudo apt install -y /tmp/chrome.deb

# vscode setup
echo "setup vscode"
VSCODE="https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64"
wget $VSCODE -O /tmp/code.deb
sudo apt install -y /tmp/code.deb

# docker engine installation
echo "setup docker"
sudo apt -y install ca-certificates curl gnupg lsb-release

if [ ! -f "/etc/apt/keyrings/docker.gpg" ]; then
    sudo mkdir -p /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
fi

# NOTE: using jammy forcefully, since I use linux mint.
if [ ! -f "/etc/apt/sources.list.d/docker.list" ]; then
    echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        jammy stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
fi

sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

if [ $(getent group docker) ]; then
    echo "docker group exists."
else
    sudo groupadd docker
fi

sudo usermod -aG docker $USER

sudo systemctl enable docker.service
sudo systemctl enable containerd.service

{{- end }}
